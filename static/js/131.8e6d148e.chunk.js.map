{"version":3,"file":"static/js/131.8e6d148e.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/media-query/dist/index.esm.js","components/Navigation/index.tsx"],"sourcesContent":["// ../../../react-shim.js\nimport React from \"react\";\n\n// src/media-query.tsx\nimport { useTheme } from \"@chakra-ui/system\";\nvar getBreakpoint = (theme, value) => {\n  var _a;\n  return ((_a = theme == null ? void 0 : theme.breakpoints) == null ? void 0 : _a[value]) ?? value;\n};\nfunction useQuery(props) {\n  const { breakpoint = \"\", below, above } = props;\n  const theme = useTheme();\n  const bpBelow = getBreakpoint(theme, below);\n  const bpAbove = getBreakpoint(theme, above);\n  let query = breakpoint;\n  if (bpBelow) {\n    query = `(max-width: ${bpBelow})`;\n  } else if (bpAbove) {\n    query = `(min-width: ${bpAbove})`;\n  }\n  return query;\n}\n\n// src/use-media-query.ts\nimport { useEnvironment } from \"@chakra-ui/react-env\";\nimport { useEffect, useState } from \"react\";\nfunction useMediaQuery(query, options = {}) {\n  const { ssr = true, fallback } = options;\n  const env = useEnvironment();\n  const queries = Array.isArray(query) ? query : [query];\n  let fallbackValues = Array.isArray(fallback) ? fallback : [fallback];\n  fallbackValues = fallbackValues.filter((v) => v != null);\n  const [value, setValue] = useState(() => {\n    return queries.map((query2, index) => ({\n      media: query2,\n      matches: ssr ? !!fallbackValues[index] : env.window.matchMedia(query2).matches\n    }));\n  });\n  useEffect(() => {\n    setValue(queries.map((query2) => ({\n      media: query2,\n      matches: env.window.matchMedia(query2).matches\n    })));\n    const mql = queries.map((query2) => env.window.matchMedia(query2));\n    const handler = (evt) => {\n      setValue((prev) => {\n        return prev.slice().map((item) => {\n          if (item.media === evt.media)\n            return { ...item, matches: evt.matches };\n          return item;\n        });\n      });\n    };\n    mql.forEach((mql2) => {\n      if (typeof mql2.addListener === \"function\") {\n        mql2.addListener(handler);\n      } else {\n        mql2.addEventListener(\"change\", handler);\n      }\n    });\n    return () => {\n      mql.forEach((mql2) => {\n        if (typeof mql2.removeListener === \"function\") {\n          mql2.removeListener(handler);\n        } else {\n          mql2.removeEventListener(\"change\", handler);\n        }\n      });\n    };\n  }, [env.window]);\n  return value.map((item) => item.matches);\n}\n\n// src/media-query.hook.ts\nfunction usePrefersReducedMotion(options) {\n  const [prefersReducedMotion] = useMediaQuery(\"(prefers-reduced-motion: reduce)\", options);\n  return prefersReducedMotion;\n}\nfunction useColorModePreference(options) {\n  const [isLight, isDark] = useMediaQuery([\"(prefers-color-scheme: light)\", \"(prefers-color-scheme: dark)\"], options);\n  if (isLight)\n    return \"light\";\n  if (isDark)\n    return \"dark\";\n  return void 0;\n}\n\n// src/use-breakpoint.ts\nimport { useTheme as useTheme2 } from \"@chakra-ui/system\";\n\n// ../../utilities/shared-utils/src/index.ts\nfunction isObject(value) {\n  const type = typeof value;\n  return value != null && (type === \"object\" || type === \"function\") && !Array.isArray(value);\n}\n\n// src/use-breakpoint.ts\nfunction useBreakpoint(arg) {\n  var _a;\n  const opts = isObject(arg) ? arg : { fallback: arg ?? \"base\" };\n  const theme = useTheme2();\n  const breakpoints = theme.__breakpoints.details.map(({ minMaxQuery, breakpoint }) => ({\n    breakpoint,\n    query: minMaxQuery.replace(\"@media screen and \", \"\")\n  }));\n  const fallback = breakpoints.map((bp) => bp.breakpoint === opts.fallback);\n  const values = useMediaQuery(breakpoints.map((bp) => bp.query), { fallback, ssr: opts.ssr });\n  const index = values.findIndex((value) => value == true);\n  return ((_a = breakpoints[index]) == null ? void 0 : _a.breakpoint) ?? opts.fallback;\n}\n\n// src/use-breakpoint-value.ts\nimport { useTheme as useTheme3 } from \"@chakra-ui/system\";\nimport { arrayToObjectNotation } from \"@chakra-ui/breakpoint-utils\";\n\n// src/media-query.utils.ts\nimport { breakpoints as defaultBreakPoints } from \"@chakra-ui/breakpoint-utils\";\nfunction getClosestValue(values, breakpoint, breakpoints = defaultBreakPoints) {\n  let index = Object.keys(values).indexOf(breakpoint);\n  if (index !== -1) {\n    return values[breakpoint];\n  }\n  let stopIndex = breakpoints.indexOf(breakpoint);\n  while (stopIndex >= 0) {\n    const key = breakpoints[stopIndex];\n    if (values.hasOwnProperty(key)) {\n      index = stopIndex;\n      break;\n    }\n    stopIndex -= 1;\n  }\n  if (index !== -1) {\n    const key = breakpoints[index];\n    return values[key];\n  }\n  return void 0;\n}\n\n// src/use-breakpoint-value.ts\nfunction useBreakpointValue(values, arg) {\n  var _a;\n  const opts = isObject(arg) ? arg : { fallback: arg ?? \"base\" };\n  const breakpoint = useBreakpoint(opts);\n  const theme = useTheme3();\n  if (!breakpoint)\n    return;\n  const breakpoints = Array.from(((_a = theme.__breakpoints) == null ? void 0 : _a.keys) || []);\n  const obj = Array.isArray(values) ? Object.fromEntries(Object.entries(arrayToObjectNotation(values, breakpoints)).map(([key, value]) => [key, value])) : values;\n  return getClosestValue(obj, breakpoint, breakpoints);\n}\n\n// src/visibility.tsx\nfunction Visibility(props) {\n  const { breakpoint, hide, children, ssr } = props;\n  const [show] = useMediaQuery(breakpoint, { ssr });\n  const isVisible = hide ? !show : show;\n  const rendered = isVisible ? children : null;\n  return rendered;\n}\n\n// src/show.tsx\nfunction Show(props) {\n  const { children, ssr } = props;\n  const query = useQuery(props);\n  return /* @__PURE__ */ React.createElement(Visibility, {\n    breakpoint: query,\n    ssr\n  }, children);\n}\nShow.displayName = \"Show\";\n\n// src/hide.tsx\nfunction Hide(props) {\n  const { children, ssr } = props;\n  const query = useQuery(props);\n  return /* @__PURE__ */ React.createElement(Visibility, {\n    breakpoint: query,\n    hide: true,\n    ssr\n  }, children);\n}\nHide.displayName = \"Hide\";\nexport {\n  Hide,\n  Show,\n  useBreakpoint,\n  useBreakpointValue,\n  useColorModePreference,\n  useMediaQuery,\n  usePrefersReducedMotion,\n  useQuery\n};\n","import React, { useState } from \"react\";\r\n\r\nimport { NavLink, Outlet } from \"react-router-dom\";\r\nimport {\r\n  Flex,\r\n  Container,\r\n  Heading,\r\n  Link,\r\n  useMediaQuery,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst Navigation = () => {\r\n  const [isSmallerThan780] = useMediaQuery(\"(max-width: 780px)\");\r\n\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  type LinkType = {\r\n    path: string;\r\n    value: string;\r\n  };\r\n\r\n  const LinkProps = ({ path, value }: LinkType) => {\r\n    return (\r\n      <Link\r\n        as={NavLink}\r\n        to={path}\r\n        end\r\n        width={`${isSmallerThan780 ? \"fit-content\" : \"28\"}`}\r\n        height=\"10\"\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        borderRadius=\"full\"\r\n        color=\"whiteAlpha.700\"\r\n        _activeLink={\r\n          !isSmallerThan780\r\n            ? {\r\n                backgroundColor: \"#3BE4C6\",\r\n                color: \"black\",\r\n              }\r\n            : {}\r\n        }\r\n      >\r\n        {value}\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Flex\r\n        as=\"nav\"\r\n        height=\"24\"\r\n        alignItems=\"center\"\r\n        backgroundColor=\"customBlack\"\r\n        color=\"white\"\r\n        position=\"sticky\"\r\n        top=\"0\"\r\n        userSelect=\"none\"\r\n        zIndex=\"99\"\r\n      >\r\n        <Container maxWidth=\"fit-content\">\r\n          <Heading>Erik Jonathan</Heading>\r\n        </Container>\r\n\r\n        <Container maxWidth=\"fit-content\">\r\n          {isSmallerThan780 && (\r\n            <button\r\n              onClick={() => setClicked(!clicked)}\r\n              className={`hamburger ${clicked ? \"open\" : \"\"}`}\r\n              title=\"hamburger icon\"\r\n              type=\"button\"\r\n            >\r\n              <span />\r\n              <span />\r\n              <span />\r\n            </button>\r\n          )}\r\n          <Flex\r\n            as=\"section\"\r\n            display={`${isSmallerThan780 ? (clicked ? \"\" : \"none\") : \"flex\"}`}\r\n            justifyContent=\"space-evenly\"\r\n            fontSize=\"sm\"\r\n            width={{ lg: \"30rem\" }}\r\n            className={`${isSmallerThan780 ? \"navbar\" : \"\"}`}\r\n          >\r\n            <LinkProps path=\"/\" value=\"My Portfolio\" />\r\n            <LinkProps path=\"about\" value=\"About me\" />\r\n          </Flex>\r\n        </Container>\r\n      </Flex>\r\n      <Outlet />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n"],"names":["useMediaQuery","query","options","ssr","fallback","env","useEnvironment","queries","Array","isArray","fallbackValues","filter","v","useState","map","query2","index","media","matches","window","matchMedia","value","setValue","useEffect","mql","handler","evt","prev","slice","item","forEach","mql2","addListener","addEventListener","removeListener","removeEventListener","isSmallerThan780","clicked","setClicked","LinkProps","path","as","NavLink","to","end","width","height","display","justifyContent","alignItems","borderRadius","color","_activeLink","backgroundColor","position","top","userSelect","zIndex","maxWidth","onClick","className","title","type","fontSize","lg"],"sourceRoot":""}