{"version":3,"file":"static/js/457.131b477f.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/image/dist/index.esm.js","components/My-Portfolio/index.tsx","../node_modules/@chakra-ui/react-use-merge-refs/dist/index.esm.js","../node_modules/@chakra-ui/button/dist/index.esm.js"],"sourcesContent":["// ../../../react-shim.js\nimport React from \"react\";\n\n// src/image.tsx\nimport {\n  chakra,\n  forwardRef as forwardRef2\n} from \"@chakra-ui/system\";\n\n// ../../utilities/object-utils/src/index.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone)\n      delete clone[key];\n  }\n  return clone;\n}\n\n// src/use-image.ts\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef();\n  const load = useCallback(() => {\n    if (!src)\n      return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin)\n      img.crossOrigin = crossOrigin;\n    if (srcSet)\n      img.srcset = srcSet;\n    if (sizes)\n      img.sizes = sizes;\n    if (loading)\n      img.loading = loading;\n    img.onload = (event) => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n    img.onerror = (error) => {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback)\n      return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nvar shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n\n// src/native-image.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nvar NativeImage = forwardRef(function NativeImage2(props, ref) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props;\n  return /* @__PURE__ */ React.createElement(\"img\", {\n    width: htmlWidth,\n    height: htmlHeight,\n    ref,\n    alt,\n    ...rest\n  });\n});\nNativeImage.displayName = \"NativeImage\";\n\n// src/image.tsx\nvar Image2 = forwardRef2(function Image3(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || ignoreFallback || !providedFallback;\n  const status = useImage({\n    ...props,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\n  };\n  if (showFallbackImage) {\n    if (fallback)\n      return fallback;\n    return /* @__PURE__ */ React.createElement(chakra.img, {\n      as: NativeImage,\n      className: \"chakra-image__placeholder\",\n      src: fallbackSrc,\n      ...shared\n    });\n  }\n  return /* @__PURE__ */ React.createElement(chakra.img, {\n    as: NativeImage,\n    src,\n    srcSet,\n    crossOrigin,\n    loading,\n    referrerPolicy,\n    className: \"chakra-image\",\n    ...shared\n  });\n});\nImage2.displayName = \"Image\";\n\n// src/img.tsx\nimport { chakra as chakra2, forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nvar Img = forwardRef3((props, ref) => /* @__PURE__ */ React.createElement(chakra2.img, {\n  ref,\n  as: NativeImage,\n  className: \"chakra-image\",\n  ...props\n}));\nexport {\n  Image2 as Image,\n  Img,\n  shouldShowFallbackImage,\n  useImage\n};\n","import React, {useRef} from \"react\";\r\n\r\nimport {\r\n  Container,\r\n  Heading,\r\n  Link,\r\n  Flex,\r\n  Image,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport Sea from \"../../assets/sea.jpg\";\r\n\r\nconst Portfolio = () => {\r\n  const ImageProps = ({\r\n    path,\r\n    img,\r\n    alt,\r\n  }: {\r\n    path: string;\r\n    img: string;\r\n    alt: string;\r\n  }) => (\r\n    <Link href={path}>\r\n      <Image src={img} alt={alt} />\r\n    </Link>\r\n  );\r\n\r\n  const portfolioRef = useRef<HTMLDivElement>(null)\r\n\r\n  const handleClick = () => portfolioRef.current?.scrollIntoView()\r\n\r\n  return (\r\n    <section className=\"opacity-animation\">\r\n      <Container as=\"section\" maxWidth=\"full\">\r\n        <Flex\r\n          as=\"section\"\r\n          flexDirection=\"column\"\r\n          height=\"calc(100vh - 6rem)\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          gap='20'\r\n          backgroundImage={Sea}\r\n          backgroundClip=\"text\"\r\n        >\r\n          <Heading\r\n            as=\"h1\"\r\n            fontSize={{ base: \"5xl\", sm: \"7xl\", md: \"9xl\" }}\r\n            letterSpacing=\"widest\"\r\n            fontWeight=\"black\"\r\n            fontFamily=\"sans-serif\"\r\n          >\r\n            Portfolio\r\n          </Heading>\r\n\r\n          <Button onClick={handleClick} backgroundColor='cyan.900' color='white' _hover={{backgroundColor:'blue.600'}} _active={{backgroundColor: \"blue.900\"}}>See My Portfolio</Button>\r\n        </Flex>\r\n\r\n        <Container as=\"main\" ref={portfolioRef}>\r\n          <Container as=\"section\" color='white'>\r\n          </Container>\r\n        </Container>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Portfolio;\r\n","// src/index.ts\nimport { useMemo } from \"react\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\nexport {\n  assignRef,\n  mergeRefs,\n  useMergeRefs\n};\n","// ../../../react-shim.js\nimport React from \"react\";\n\n// src/button.tsx\nimport { useMergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra as chakra3,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\n\n// ../../utilities/shared-utils/src/index.ts\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\nvar dataAttr = (condition) => condition ? \"\" : void 0;\n\n// src/button.tsx\nimport { useMemo as useMemo2 } from \"react\";\n\n// src/button-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [ButtonGroupProvider, useButtonGroup] = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n});\n\n// src/button-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cloneElement, isValidElement } from \"react\";\nfunction ButtonIcon(props) {\n  const { children, className, ...rest } = props;\n  const _children = isValidElement(children) ? cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n  const _className = cx(\"chakra-button__icon\", className);\n  return /* @__PURE__ */ React.createElement(chakra.span, {\n    display: \"inline-flex\",\n    alignSelf: \"center\",\n    flexShrink: 0,\n    ...rest,\n    className: _className\n  }, _children);\n}\nButtonIcon.displayName = \"ButtonIcon\";\n\n// src/button-spinner.tsx\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra as chakra2 } from \"@chakra-ui/system\";\nimport { useMemo } from \"react\";\nfunction ButtonSpinner(props) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = /* @__PURE__ */ React.createElement(Spinner, {\n      color: \"currentColor\",\n      width: \"1em\",\n      height: \"1em\"\n    }),\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__spinner\", className);\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  const spinnerStyles = useMemo(() => ({\n    display: \"flex\",\n    alignItems: \"center\",\n    position: label ? \"relative\" : \"absolute\",\n    [marginProp]: label ? spacing : 0,\n    fontSize: \"1em\",\n    lineHeight: \"normal\",\n    ...__css\n  }), [__css, label, marginProp, spacing]);\n  return /* @__PURE__ */ React.createElement(chakra2.div, {\n    className: _className,\n    ...rest,\n    __css: spinnerStyles\n  }, children);\n}\nButtonSpinner.displayName = \"ButtonSpinner\";\n\n// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback((node) => {\n    if (!node)\n      return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return { ref: refCallback, type };\n}\n\n// src/button.tsx\nvar Button = forwardRef((props, ref) => {\n  const group = useButtonGroup();\n  const styles = useStyleConfig(\"Button\", { ...group, ...props });\n  const {\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    ...rest\n  } = omitThemingProps(props);\n  const buttonStyles = useMemo2(() => {\n    const _focus = { ...styles == null ? void 0 : styles[\"_focus\"], zIndex: 1 };\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...!!group && { _focus }\n    };\n  }, [styles, group]);\n  const { ref: _ref, type: defaultType } = useButtonType(as);\n  const contentProps = { rightIcon, leftIcon, iconSpacing, children };\n  return /* @__PURE__ */ React.createElement(chakra3.button, {\n    disabled: isDisabled || isLoading,\n    ref: useMergeRefs(ref, _ref),\n    as,\n    type: type ?? defaultType,\n    \"data-active\": dataAttr(isActive),\n    \"data-loading\": dataAttr(isLoading),\n    __css: buttonStyles,\n    className: cx(\"chakra-button\", className),\n    ...rest\n  }, isLoading && spinnerPlacement === \"start\" && /* @__PURE__ */ React.createElement(ButtonSpinner, {\n    className: \"chakra-button__spinner--start\",\n    label: loadingText,\n    placement: \"start\",\n    spacing: iconSpacing\n  }, spinner), isLoading ? loadingText || /* @__PURE__ */ React.createElement(chakra3.span, {\n    opacity: 0\n  }, /* @__PURE__ */ React.createElement(ButtonContent, {\n    ...contentProps\n  })) : /* @__PURE__ */ React.createElement(ButtonContent, {\n    ...contentProps\n  }), isLoading && spinnerPlacement === \"end\" && /* @__PURE__ */ React.createElement(ButtonSpinner, {\n    className: \"chakra-button__spinner--end\",\n    label: loadingText,\n    placement: \"end\",\n    spacing: iconSpacing\n  }, spinner));\n});\nButton.displayName = \"Button\";\nfunction ButtonContent(props) {\n  const { leftIcon, rightIcon, children, iconSpacing } = props;\n  return /* @__PURE__ */ React.createElement(React.Fragment, null, leftIcon && /* @__PURE__ */ React.createElement(ButtonIcon, {\n    marginEnd: iconSpacing\n  }, leftIcon), children, rightIcon && /* @__PURE__ */ React.createElement(ButtonIcon, {\n    marginStart: iconSpacing\n  }, rightIcon));\n}\n\n// src/button-group.tsx\nimport {\n  chakra as chakra4,\n  forwardRef as forwardRef2\n} from \"@chakra-ui/system\";\nimport { useMemo as useMemo3 } from \"react\";\nvar ButtonGroup = forwardRef2(function ButtonGroup2(props, ref) {\n  const {\n    size,\n    colorScheme,\n    variant,\n    className,\n    spacing = \"0.5rem\",\n    isAttached,\n    isDisabled,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__group\", className);\n  const context = useMemo3(() => ({ size, colorScheme, variant, isDisabled }), [size, colorScheme, variant, isDisabled]);\n  let groupStyles = {\n    display: \"inline-flex\"\n  };\n  if (isAttached) {\n    groupStyles = {\n      ...groupStyles,\n      \"> *:first-of-type:not(:last-of-type)\": { borderEndRadius: 0 },\n      \"> *:not(:first-of-type):not(:last-of-type)\": { borderRadius: 0 },\n      \"> *:not(:first-of-type):last-of-type\": { borderStartRadius: 0 }\n    };\n  } else {\n    groupStyles = {\n      ...groupStyles,\n      \"& > *:not(style) ~ *:not(style)\": { marginStart: spacing }\n    };\n  }\n  return /* @__PURE__ */ React.createElement(ButtonGroupProvider, {\n    value: context\n  }, /* @__PURE__ */ React.createElement(chakra4.div, {\n    ref,\n    role: \"group\",\n    __css: groupStyles,\n    className: _className,\n    \"data-attached\": isAttached ? \"\" : void 0,\n    ...rest\n  }));\n});\nButtonGroup.displayName = \"ButtonGroup\";\n\n// src/icon-button.tsx\nimport { forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nimport { cloneElement as cloneElement2, isValidElement as isValidElement2 } from \"react\";\nvar IconButton = forwardRef3((props, ref) => {\n  const { icon, children, isRound, \"aria-label\": ariaLabel, ...rest } = props;\n  const element = icon || children;\n  const _children = isValidElement2(element) ? cloneElement2(element, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : null;\n  return /* @__PURE__ */ React.createElement(Button, {\n    padding: \"0\",\n    borderRadius: isRound ? \"full\" : void 0,\n    ref,\n    \"aria-label\": ariaLabel,\n    ...rest\n  }, _children);\n});\nIconButton.displayName = \"IconButton\";\nexport {\n  Button,\n  ButtonGroup,\n  ButtonSpinner,\n  IconButton,\n  useButtonGroup\n};\n"],"names":["NativeImage","forwardRef","props","ref","htmlWidth","htmlHeight","alt","rest","React","width","height","displayName","Image2","forwardRef2","fallbackSrc","fallback","src","srcSet","align","fit","loading","ignoreFallback","crossOrigin","fallbackStrategy","referrerPolicy","shouldIgnoreFallbackImage","status","onLoad","onError","sizes","useState","setStatus","useEffect","imageRef","useRef","load","useCallback","flush","img","Image","srcset","onload","event","onerror","error","current","useSafeLayoutEffect","useImage","showFallbackImage","shouldShowFallbackImage","shared","objectFit","objectPosition","object","keysToOmit","clone","Object","assign","key","omit","chakra","as","className","forwardRef3","chakra2","portfolioRef","maxWidth","flexDirection","alignItems","justifyContent","gap","backgroundImage","Sea","backgroundClip","fontSize","base","sm","md","letterSpacing","fontWeight","fontFamily","onClick","scrollIntoView","backgroundColor","color","_hover","_active","assignRef","value","Error","mergeRefs","refs","node","forEach","useMergeRefs","useMemo","cx","classNames","filter","Boolean","join","dataAttr","condition","createContext","strict","name","ButtonGroupProvider","useButtonGroup","ButtonIcon","children","_children","isValidElement","cloneElement","focusable","_className","display","alignSelf","flexShrink","ButtonSpinner","label","placement","spacing","Spinner","__css","marginProp","spinnerStyles","position","Button","group","styles","useStyleConfig","omitThemingProps","isDisabled","isLoading","isActive","leftIcon","rightIcon","loadingText","iconSpacing","type","spinner","spinnerPlacement","buttonStyles","useMemo2","_focus","zIndex","appearance","userSelect","whiteSpace","verticalAlign","outline","isButton","setIsButton","tagName","useButtonType","_ref","defaultType","contentProps","chakra3","disabled","opacity","ButtonContent","marginEnd","marginStart","size","colorScheme","variant","isAttached","context","useMemo3","groupStyles","borderEndRadius","borderRadius","borderStartRadius","chakra4","role","icon","isRound","ariaLabel","element","isValidElement2","cloneElement2","padding"],"sourceRoot":""}