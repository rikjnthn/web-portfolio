{"version":3,"file":"static/js/706.dc5355fa.chunk.js","mappings":"kRAuFA,EAzEkB,WAChB,IAcMA,GAAeC,EAAAA,EAAAA,QAAuB,MAI5C,OACE,iBAAMC,UAAU,oBAAmB,UACjC,UAAC,KAAS,CAACC,GAAG,UAAUC,SAAS,OAAM,WACrC,UAAC,KAAI,CACHD,GAAG,UACHE,cAAc,SACdC,QACEC,EAAAA,EAAAA,GAAW,SAAU,QACjB,sBACA,qBAENC,WAAW,SACXC,eAAe,SACfC,IAAI,KACJC,gBAAiBC,EACjBC,eAAe,OAAM,WAErB,SAAC,KAAO,CACNV,GAAG,KACHW,SAAU,CAAEC,KAAM,MAAOC,GAAI,MAAOC,GAAI,OACxCC,cAAc,SACdC,WAAW,QACXC,WAAW,aAAY,wBAKzB,SAAC,KAAM,CACLC,QA9BU,WAAH,aAA6B,QAA7B,EAASrB,EAAasB,eAAO,aAApB,EAAsBC,gBAAiB,EA+BvDC,gBAAgB,WAChBC,MAAM,QACNC,OAAQ,CAAEF,gBAAiB,YAC3BG,QAAS,CAAEH,gBAAiB,YAAa,kCAM7C,SAAC,KAAS,CACRrB,GAAG,UACHyB,IAAK5B,EACLM,QACEC,EAAAA,EAAAA,GAAW,SAAU,QACjB,sBACA,qBACL,UAED,SAAC,KAAS,CAACJ,GAAG,UAAUsB,MAAM,gBAKxC,C,8GCnFA,SAASI,EAAUD,EAAKE,GACtB,GAAW,MAAPF,EAEJ,GAAmB,oBAARA,EAIX,IACEA,EAAIN,QAAUQ,CAGhB,CAFE,MAAOC,GACP,MAAM,IAAIC,MAAM,wBAAD,OAAyBF,EAAK,qBAAaF,EAAG,KAC/D,MAPEA,EAAIE,EAQR,CACA,SAASG,IAAmB,2BAANC,EAAI,yBAAJA,EAAI,gBACxB,OAAO,SAACC,GACND,EAAKE,SAAQ,SAACR,GACZC,EAAUD,EAAKO,EACjB,GACF,CACF,CACA,SAASE,IAAsB,2BAANH,EAAI,yBAAJA,EAAI,gBAC3B,OAAOI,EAAAA,EAAAA,UAAQ,kBAAML,EAAS,aAAIC,EAAK,GAAEA,EAC3C,C,kaCXIK,EAAK,WAAH,2BAAOC,EAAU,yBAAVA,EAAU,uBAAKA,EAAWC,OAAOC,SAASC,KAAK,IAAI,EAC5DC,EAAW,SAACC,GAAS,OAAKA,EAAY,QAAK,CAAM,EAOjD,GAAwCC,EAAAA,EAAAA,GAAc,CACxDC,QAAQ,EACRC,KAAM,uBACN,eAHGC,EAAmB,KAAEC,EAAc,KAQxC,SAASC,EAAWC,GAClB,IAAQC,EAAiCD,EAAjCC,SAAUnD,EAAuBkD,EAAvBlD,UAAcoD,GAAI,OAAKF,EAAK,GACxCG,GAAYC,EAAAA,EAAAA,gBAAeH,IAAYI,EAAAA,EAAAA,cAAaJ,EAAU,CAClE,eAAe,EACfK,WAAW,IACRL,EACCM,EAAapB,EAAG,sBAAuBrC,GAC7C,OAAuB0D,EAAAA,cAAoBC,EAAAA,GAAAA,MAAa,gBACtDC,QAAS,cACTC,UAAW,SACXC,WAAY,GACTV,GAAI,IACPpD,UAAWyD,IACVJ,EACL,CAOA,SAASU,EAAcb,GACrB,IACEc,EAWEd,EAXFc,MACAC,EAUEf,EAVFe,UAAS,EAUPf,EATFgB,QAAAA,OAAO,IAAG,WAAQ,IAShBhB,EARFC,SAAAA,OAAQ,IAAG,EAAgBO,EAAAA,cAAoBS,EAAAA,EAAS,CACtD5C,MAAO,eACP6C,MAAO,MACPhE,OAAQ,QACR,EACFJ,EAGEkD,EAHFlD,UACAqE,EAEEnB,EAFFmB,MACGjB,GAAI,OACLF,EAAK,GACHO,EAAapB,EAAG,yBAA0BrC,GAC1CsE,EAA2B,UAAdL,EAAwB,YAAc,cACnDM,GAAgBnC,EAAAA,EAAAA,UAAQ,mCAC5BwB,QAAS,OACTtD,WAAY,SACZkE,SAAUR,EAAQ,WAAa,aAAU,SACxCM,EAAaN,EAAQE,EAAU,IAAC,oBACvB,QAAK,sBACH,UAAQ,GACjBG,EAAK,GACN,CAACA,EAAOL,EAAOM,EAAYJ,IAC/B,OAAuBR,EAAAA,cAAoBe,EAAAA,GAAAA,KAAa,gBACtDzE,UAAWyD,GACRL,GAAI,IACPiB,MAAOE,IACNpB,EACL,CApCAF,EAAWyB,YAAc,aAqCzBX,EAAcW,YAAc,gBAgB5B,IAAIC,GAASC,EAAAA,EAAAA,KAAW,SAAC1B,EAAOxB,GAC9B,IAAMmD,EAAQ7B,IACR8B,GAASC,EAAAA,EAAAA,IAAe,UAAU,kBAAKF,GAAU3B,IACvD,GAeI8B,EAAAA,EAAAA,IAAiB9B,GAAM,IAdzB+B,WAAAA,OAAU,IAAG,EAAS,MAATJ,OAAgB,EAASA,EAAMI,WAAU,EACtDC,EAAS,EAATA,UACAC,EAAQ,EAARA,SACAhC,EAAQ,EAARA,SACAiC,EAAQ,EAARA,SACAC,EAAS,EAATA,UACAC,EAAW,EAAXA,YAAW,IACXC,YAAAA,OAAW,IAAG,WAAQ,EACtBC,EAAI,EAAJA,KACAC,EAAO,EAAPA,QAAO,IACPC,iBAAAA,OAAgB,IAAG,UAAO,EAC1B1F,EAAS,EAATA,UACAC,EAAE,EAAFA,GACGmD,GAAI,YAEHuC,GAAeC,EAAAA,EAAAA,UAAS,WAC5B,IAAMC,GAAS,kBAAe,MAAVf,OAAiB,EAASA,EAAe,QAAC,IAAEgB,OAAQ,IACxE,OAAO,gBACLlC,QAAS,cACTmC,WAAY,OACZzF,WAAY,SACZC,eAAgB,SAChByF,WAAY,OACZxB,SAAU,WACVyB,WAAY,SACZC,cAAe,SACfC,QAAS,QACNrB,KACED,GAAS,CAAEgB,OAAAA,GAEpB,GAAG,CAACf,EAAQD,IACZ,EA/CF,SAAuBjD,GACrB,OAAgCwE,EAAAA,EAAAA,WAAUxE,GAAM,eAAzCyE,EAAQ,KAAEC,EAAW,KAO5B,MAAO,CAAE5E,KANW6E,EAAAA,EAAAA,cAAY,SAACtE,GAC1BA,GAELqE,EAA6B,WAAjBrE,EAAKuE,QACnB,GAAG,IAEwBhB,KADda,EAAW,cAAW,EAErC,CAsC2CI,CAAcxG,GAA1CyG,EAAI,EAAThF,IAAiBiF,EAAW,EAAjBnB,KACboB,EAAe,CAAEvB,UAAAA,EAAWD,SAAAA,EAAUG,YAAAA,EAAapC,SAAAA,GACzD,OAAuBO,EAAAA,cAAoBmD,EAAAA,GAAAA,QAAgB,QACzDC,SAAU7B,GAAcC,EACxBxD,IAAKS,EAAaT,EAAKgF,GACvBzG,GAAAA,EACAuF,KAAU,OAAJA,QAAI,IAAJA,EAAAA,EAAQmB,EACd,cAAejE,EAASyC,GACxB,eAAgBzC,EAASwC,GACzBb,MAAOsB,EACP3F,UAAWqC,EAAG,gBAAiBrC,IAC5BoD,GACF8B,GAAkC,UAArBQ,GAAgDhC,EAAAA,cAAoBK,EAAe,CACjG/D,UAAW,gCACXgE,MAAOsB,EACPrB,UAAW,QACXC,QAASqB,GACRE,GAAUP,EAAYI,GAA+B5B,EAAAA,cAAoBmD,EAAAA,GAAAA,KAAc,CACxFE,QAAS,GACQrD,EAAAA,cAAoBsD,GAAe,UACjDJ,KACiBlD,EAAAA,cAAoBsD,GAAe,UACpDJ,IACD1B,GAAkC,QAArBQ,GAA8ChC,EAAAA,cAAoBK,EAAe,CAChG/D,UAAW,8BACXgE,MAAOsB,EACPrB,UAAW,MACXC,QAASqB,GACRE,GACL,IAEA,SAASuB,EAAc9D,GACrB,IAAQkC,EAA+ClC,EAA/CkC,SAAUC,EAAqCnC,EAArCmC,UAAWlC,EAA0BD,EAA1BC,SAAUoC,EAAgBrC,EAAhBqC,YACvC,OAAuB7B,EAAAA,cAAoBA,EAAAA,SAAgB,KAAM0B,GAA4B1B,EAAAA,cAAoBT,EAAY,CAC3HgE,UAAW1B,GACVH,GAAWjC,EAAUkC,GAA6B3B,EAAAA,cAAoBT,EAAY,CACnFiE,YAAa3B,GACZF,GACL,CARAV,EAAOD,YAAc,UAgBHyC,EAAAA,EAAAA,KAAY,SAAsBjE,EAAOxB,GACzD,IACE0F,EAQElE,EARFkE,KACAC,EAOEnE,EAPFmE,YACAC,EAMEpE,EANFoE,QACAtH,EAKEkD,EALFlD,UAAS,EAKPkD,EAJFgB,QAAAA,OAAO,IAAG,WAAQ,EAClBqD,EAGErE,EAHFqE,WACAtC,EAEE/B,EAFF+B,WACG7B,GAAI,OACLF,EAAK,GACHO,EAAapB,EAAG,uBAAwBrC,GACxCwH,GAAUC,EAAAA,EAAAA,UAAS,iBAAO,CAAEL,KAAAA,EAAMC,YAAAA,EAAaC,QAAAA,EAASrC,WAAAA,EAAY,GAAG,CAACmC,EAAMC,EAAaC,EAASrC,IACtGyC,EAAc,CAChB9D,QAAS,eAeX,OAZE8D,EADEH,GACY,kBACTG,GAAW,IACd,uCAAwC,CAAEC,gBAAiB,GAC3D,6CAA8C,CAAEC,aAAc,GAC9D,uCAAwC,CAAEC,kBAAmB,MAGjD,kBACTH,GAAW,IACd,kCAAmC,CAAER,YAAahD,KAG/BR,EAAAA,cAAoBX,EAAqB,CAC9DnB,MAAO4F,GACU9D,EAAAA,cAAoBoE,EAAAA,GAAAA,KAAa,QAClDpG,IAAAA,EACAqG,KAAM,QACN1D,MAAOqD,EACP1H,UAAWyD,EACX,gBAAiB8D,EAAa,QAAK,GAChCnE,IAEP,IACYsB,YAAc,eAKTsD,EAAAA,EAAAA,KAAY,SAAC9E,EAAOxB,GACnC,IAAQuG,EAA8D/E,EAA9D+E,KAAM9E,EAAwDD,EAAxDC,SAAU+E,EAA8ChF,EAA9CgF,QAAuBC,EAAuBjF,EAArC,cAA4BE,GAAI,OAAKF,EAAK,GACrEkF,EAAUH,GAAQ9E,EAClBE,GAAYgF,EAAAA,EAAAA,gBAAgBD,IAAWE,EAAAA,EAAAA,cAAcF,EAAS,CAClE,eAAe,EACf5E,WAAW,IACR,KACL,OAAuBE,EAAAA,cAAoBiB,GAAQ,QACjD4D,QAAS,IACTX,aAAcM,EAAU,YAAS,EACjCxG,IAAAA,EACA,aAAcyG,GACX/E,GACFC,EACL,IACWqB,YAAc,Y,2SC3JzB,IAII8D,GAAc5D,EAAAA,EAAAA,KAAW,SAAsB1B,EAAOxB,GACxD,IAAQ+G,EAAwCvF,EAAxCuF,UAAWC,EAA6BxF,EAA7BwF,WAAYC,EAAiBzF,EAAjByF,IAAQvF,GAAI,OAAKF,EAAK,GACrD,OAAuBQ,EAAAA,cAAoB,OAAO,QAChDU,MAAOqE,EACPrI,OAAQsI,EACRhH,IAAAA,EACAiH,IAAAA,GACGvF,GAEP,IACAoF,EAAY9D,YAAc,cAG1B,IAAIkE,GAASzB,EAAAA,EAAAA,KAAY,SAAgBjE,EAAOxB,GAC9C,IACEmH,EAYE3F,EAZF2F,YACAC,EAWE5F,EAXF4F,SACAC,EAUE7F,EAVF6F,IACAC,EASE9F,EATF8F,OACAC,EAQE/F,EARF+F,MACAC,EAOEhG,EAPFgG,IACAC,EAMEjG,EANFiG,QACAC,EAKElG,EALFkG,eACAC,EAIEnG,EAJFmG,YAAW,EAITnG,EAHFoG,iBAAAA,OAAgB,IAAG,sBAAmB,EACtCC,EAEErG,EAFFqG,eACGnG,GAAI,OACLF,EAAK,GAEHsG,EAAuC,MAAXL,GAAmBC,UADZ,IAAhBP,QAAuC,IAAbC,GAE7CW,EA/FR,SAAkBvG,GAChB,IACEiG,EAQEjG,EARFiG,QACAJ,EAOE7F,EAPF6F,IACAC,EAME9F,EANF8F,OACAU,EAKExG,EALFwG,OACAC,EAIEzG,EAJFyG,QACAN,EAGEnG,EAHFmG,YACAO,EAEE1G,EAFF0G,MACAR,EACElG,EADFkG,eAEF,GAA4BhD,EAAAA,EAAAA,UAAS,WAAU,eAAxCqD,EAAM,KAAEI,EAAS,MACxBC,EAAAA,EAAAA,YAAU,WACRD,EAAUd,EAAM,UAAY,UAC9B,GAAG,CAACA,IACJ,IAAMgB,GAAWhK,EAAAA,EAAAA,UACXiK,GAAOzD,EAAAA,EAAAA,cAAY,WACvB,GAAKwC,EAAL,CAEAkB,IACA,IAAMC,EAAM,IAAIC,MAChBD,EAAInB,IAAMA,EACNM,IACFa,EAAIb,YAAcA,GAChBL,IACFkB,EAAIE,OAASpB,GACXY,IACFM,EAAIN,MAAQA,GACVT,IACFe,EAAIf,QAAUA,GAChBe,EAAIG,OAAS,SAACC,GACZL,IACAJ,EAAU,UACA,MAAVH,GAA0BA,EAAOY,EACnC,EACAJ,EAAIK,QAAU,SAAC1I,GACboI,IACAJ,EAAU,UACC,MAAXF,GAA2BA,EAAQ9H,EACrC,EACAkI,EAAS3I,QAAU8I,CAtBX,CAuBV,GAAG,CAACnB,EAAKM,EAAaL,EAAQY,EAAOF,EAAQC,EAASR,IAChDc,EAAQ,WACRF,EAAS3I,UACX2I,EAAS3I,QAAQiJ,OAAS,KAC1BN,EAAS3I,QAAQmJ,QAAU,KAC3BR,EAAS3I,QAAU,KAEvB,EAWA,OAVAoJ,EAAAA,EAAAA,IAAoB,WAClB,IAAIpB,EAKJ,MAHe,YAAXK,GACFO,IAEK,WACLC,GACF,CACF,GAAG,CAACR,EAAQO,EAAMZ,IACXA,EAAiB,SAAWK,CACrC,CAmCiBgB,EAAS,kBACnBvH,GAAK,IACRkG,eAAgBI,KAEZkB,EAtCsB,SAACjB,EAAQH,GAAgB,MAAgB,WAAXG,GAA4C,sBAArBH,GAAuD,WAAXG,GAA4C,YAArBH,CAA8B,CAsCxJqB,CAAwBlB,EAAQH,GACpDsB,GAAS,QACblJ,IAAAA,EACAmJ,UAAW3B,EACX4B,eAAgB7B,GACbO,EAA4BpG,EApHnC,SAAc2H,GAAyB,IAET,EAFRC,EAAa,UAAH,6CAAG,GAC3BC,EAAQC,OAAOC,OAAO,CAAC,EAAGJ,GAAQ,UACtBC,GAAU,IAA5B,IAAK,EAAL,qBAA8B,KAAnBI,EAAG,QACRA,KAAOH,UACFA,EAAMG,EACjB,CAAC,+BACD,OAAOH,CACT,CA6G0CI,CAAKjI,EAAM,CAAC,UAAW,YAE/D,OAAIsH,EACE5B,GAEmBpF,EAAAA,cAAoBC,EAAAA,GAAAA,KAAY,QACrD1D,GAAIuI,EACJxI,UAAW,4BACX+I,IAAKF,GACF+B,IAGgBlH,EAAAA,cAAoBC,EAAAA,GAAAA,KAAY,QACrD1D,GAAIuI,EACJO,IAAAA,EACAC,OAAAA,EACAK,YAAAA,EACAF,QAAAA,EACAI,eAAAA,EACAvJ,UAAW,gBACR4K,GAEP,IACAhC,EAAOlE,YAAc,SAIXsD,EAAAA,EAAAA,KAAY,SAAC9E,EAAOxB,GAAG,OAAqBgC,EAAAA,cAAoBe,EAAAA,GAAAA,KAAa,QACrF/C,IAAAA,EACAzB,GAAIuI,EACJxI,UAAW,gBACRkD,GACH,G","sources":["components/My-Portfolio/index.tsx","../node_modules/@chakra-ui/react-use-merge-refs/dist/index.esm.js","../node_modules/@chakra-ui/button/dist/index.esm.js","../node_modules/@chakra-ui/image/dist/index.esm.js"],"sourcesContent":["import React, { useRef } from \"react\";\r\n\r\nimport {\r\n  Container,\r\n  Heading,\r\n  Link,\r\n  Flex,\r\n  Image,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport Sea from \"../../assets/sea.webp\";\r\nimport { cssSupport } from \"../../helper/css-support\";\r\n\r\nconst Portfolio = () => {\r\n  const ImageProps = ({\r\n    path,\r\n    img,\r\n    alt,\r\n  }: {\r\n    path: string;\r\n    img: string;\r\n    alt: string;\r\n  }) => (\r\n    <Link href={path}>\r\n      <Image src={img} alt={alt} />\r\n    </Link>\r\n  );\r\n\r\n  const portfolioRef = useRef<HTMLDivElement>(null);\r\n\r\n  const handleClick = () => portfolioRef.current?.scrollIntoView();\r\n\r\n  return (\r\n    <main className=\"opacity-animation\">\r\n      <Container as=\"section\" maxWidth=\"full\">\r\n        <Flex\r\n          as=\"section\"\r\n          flexDirection=\"column\"\r\n          height={\r\n            cssSupport(\"height\", \"1dvh\")\r\n              ? \"calc(100dvh - 6rem)\"\r\n              : \"calc(100vh - 6rem)\"\r\n          }\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          gap=\"20\"\r\n          backgroundImage={Sea}\r\n          backgroundClip=\"text\"\r\n        >\r\n          <Heading\r\n            as=\"h1\"\r\n            fontSize={{ base: \"5xl\", sm: \"7xl\", md: \"9xl\" }}\r\n            letterSpacing=\"widest\"\r\n            fontWeight=\"black\"\r\n            fontFamily=\"sans-serif\"\r\n          >\r\n            Portfolio\r\n          </Heading>\r\n\r\n          <Button\r\n            onClick={handleClick}\r\n            backgroundColor=\"cyan.900\"\r\n            color=\"white\"\r\n            _hover={{ backgroundColor: \"blue.600\" }}\r\n            _active={{ backgroundColor: \"blue.900\" }}\r\n          >\r\n            See My Portfolio\r\n          </Button>\r\n        </Flex>\r\n\r\n        <Container\r\n          as=\"section\"\r\n          ref={portfolioRef}\r\n          height={\r\n            cssSupport(\"height\", \"1dvh\")\r\n              ? \"calc(100dvh - 6rem)\"\r\n              : \"calc(100vh - 6rem)\"\r\n          }\r\n        >\r\n          <Container as=\"section\" color=\"white\"></Container>\r\n        </Container>\r\n      </Container>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Portfolio;\r\n","// src/index.ts\nimport { useMemo } from \"react\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\nexport {\n  assignRef,\n  mergeRefs,\n  useMergeRefs\n};\n","// ../../../react-shim.js\nimport React from \"react\";\n\n// src/button.tsx\nimport { useMergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra as chakra3,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\n\n// ../../utilities/shared-utils/src/index.ts\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\nvar dataAttr = (condition) => condition ? \"\" : void 0;\n\n// src/button.tsx\nimport { useMemo as useMemo2 } from \"react\";\n\n// src/button-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [ButtonGroupProvider, useButtonGroup] = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n});\n\n// src/button-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cloneElement, isValidElement } from \"react\";\nfunction ButtonIcon(props) {\n  const { children, className, ...rest } = props;\n  const _children = isValidElement(children) ? cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n  const _className = cx(\"chakra-button__icon\", className);\n  return /* @__PURE__ */ React.createElement(chakra.span, {\n    display: \"inline-flex\",\n    alignSelf: \"center\",\n    flexShrink: 0,\n    ...rest,\n    className: _className\n  }, _children);\n}\nButtonIcon.displayName = \"ButtonIcon\";\n\n// src/button-spinner.tsx\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra as chakra2 } from \"@chakra-ui/system\";\nimport { useMemo } from \"react\";\nfunction ButtonSpinner(props) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = /* @__PURE__ */ React.createElement(Spinner, {\n      color: \"currentColor\",\n      width: \"1em\",\n      height: \"1em\"\n    }),\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__spinner\", className);\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  const spinnerStyles = useMemo(() => ({\n    display: \"flex\",\n    alignItems: \"center\",\n    position: label ? \"relative\" : \"absolute\",\n    [marginProp]: label ? spacing : 0,\n    fontSize: \"1em\",\n    lineHeight: \"normal\",\n    ...__css\n  }), [__css, label, marginProp, spacing]);\n  return /* @__PURE__ */ React.createElement(chakra2.div, {\n    className: _className,\n    ...rest,\n    __css: spinnerStyles\n  }, children);\n}\nButtonSpinner.displayName = \"ButtonSpinner\";\n\n// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback((node) => {\n    if (!node)\n      return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return { ref: refCallback, type };\n}\n\n// src/button.tsx\nvar Button = forwardRef((props, ref) => {\n  const group = useButtonGroup();\n  const styles = useStyleConfig(\"Button\", { ...group, ...props });\n  const {\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    ...rest\n  } = omitThemingProps(props);\n  const buttonStyles = useMemo2(() => {\n    const _focus = { ...styles == null ? void 0 : styles[\"_focus\"], zIndex: 1 };\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...!!group && { _focus }\n    };\n  }, [styles, group]);\n  const { ref: _ref, type: defaultType } = useButtonType(as);\n  const contentProps = { rightIcon, leftIcon, iconSpacing, children };\n  return /* @__PURE__ */ React.createElement(chakra3.button, {\n    disabled: isDisabled || isLoading,\n    ref: useMergeRefs(ref, _ref),\n    as,\n    type: type ?? defaultType,\n    \"data-active\": dataAttr(isActive),\n    \"data-loading\": dataAttr(isLoading),\n    __css: buttonStyles,\n    className: cx(\"chakra-button\", className),\n    ...rest\n  }, isLoading && spinnerPlacement === \"start\" && /* @__PURE__ */ React.createElement(ButtonSpinner, {\n    className: \"chakra-button__spinner--start\",\n    label: loadingText,\n    placement: \"start\",\n    spacing: iconSpacing\n  }, spinner), isLoading ? loadingText || /* @__PURE__ */ React.createElement(chakra3.span, {\n    opacity: 0\n  }, /* @__PURE__ */ React.createElement(ButtonContent, {\n    ...contentProps\n  })) : /* @__PURE__ */ React.createElement(ButtonContent, {\n    ...contentProps\n  }), isLoading && spinnerPlacement === \"end\" && /* @__PURE__ */ React.createElement(ButtonSpinner, {\n    className: \"chakra-button__spinner--end\",\n    label: loadingText,\n    placement: \"end\",\n    spacing: iconSpacing\n  }, spinner));\n});\nButton.displayName = \"Button\";\nfunction ButtonContent(props) {\n  const { leftIcon, rightIcon, children, iconSpacing } = props;\n  return /* @__PURE__ */ React.createElement(React.Fragment, null, leftIcon && /* @__PURE__ */ React.createElement(ButtonIcon, {\n    marginEnd: iconSpacing\n  }, leftIcon), children, rightIcon && /* @__PURE__ */ React.createElement(ButtonIcon, {\n    marginStart: iconSpacing\n  }, rightIcon));\n}\n\n// src/button-group.tsx\nimport {\n  chakra as chakra4,\n  forwardRef as forwardRef2\n} from \"@chakra-ui/system\";\nimport { useMemo as useMemo3 } from \"react\";\nvar ButtonGroup = forwardRef2(function ButtonGroup2(props, ref) {\n  const {\n    size,\n    colorScheme,\n    variant,\n    className,\n    spacing = \"0.5rem\",\n    isAttached,\n    isDisabled,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__group\", className);\n  const context = useMemo3(() => ({ size, colorScheme, variant, isDisabled }), [size, colorScheme, variant, isDisabled]);\n  let groupStyles = {\n    display: \"inline-flex\"\n  };\n  if (isAttached) {\n    groupStyles = {\n      ...groupStyles,\n      \"> *:first-of-type:not(:last-of-type)\": { borderEndRadius: 0 },\n      \"> *:not(:first-of-type):not(:last-of-type)\": { borderRadius: 0 },\n      \"> *:not(:first-of-type):last-of-type\": { borderStartRadius: 0 }\n    };\n  } else {\n    groupStyles = {\n      ...groupStyles,\n      \"& > *:not(style) ~ *:not(style)\": { marginStart: spacing }\n    };\n  }\n  return /* @__PURE__ */ React.createElement(ButtonGroupProvider, {\n    value: context\n  }, /* @__PURE__ */ React.createElement(chakra4.div, {\n    ref,\n    role: \"group\",\n    __css: groupStyles,\n    className: _className,\n    \"data-attached\": isAttached ? \"\" : void 0,\n    ...rest\n  }));\n});\nButtonGroup.displayName = \"ButtonGroup\";\n\n// src/icon-button.tsx\nimport { forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nimport { cloneElement as cloneElement2, isValidElement as isValidElement2 } from \"react\";\nvar IconButton = forwardRef3((props, ref) => {\n  const { icon, children, isRound, \"aria-label\": ariaLabel, ...rest } = props;\n  const element = icon || children;\n  const _children = isValidElement2(element) ? cloneElement2(element, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : null;\n  return /* @__PURE__ */ React.createElement(Button, {\n    padding: \"0\",\n    borderRadius: isRound ? \"full\" : void 0,\n    ref,\n    \"aria-label\": ariaLabel,\n    ...rest\n  }, _children);\n});\nIconButton.displayName = \"IconButton\";\nexport {\n  Button,\n  ButtonGroup,\n  ButtonSpinner,\n  IconButton,\n  useButtonGroup\n};\n","// ../../../react-shim.js\nimport React from \"react\";\n\n// src/image.tsx\nimport {\n  chakra,\n  forwardRef as forwardRef2\n} from \"@chakra-ui/system\";\n\n// ../../utilities/object-utils/src/index.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone)\n      delete clone[key];\n  }\n  return clone;\n}\n\n// src/use-image.ts\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef();\n  const load = useCallback(() => {\n    if (!src)\n      return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin)\n      img.crossOrigin = crossOrigin;\n    if (srcSet)\n      img.srcset = srcSet;\n    if (sizes)\n      img.sizes = sizes;\n    if (loading)\n      img.loading = loading;\n    img.onload = (event) => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n    img.onerror = (error) => {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback)\n      return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nvar shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n\n// src/native-image.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nvar NativeImage = forwardRef(function NativeImage2(props, ref) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props;\n  return /* @__PURE__ */ React.createElement(\"img\", {\n    width: htmlWidth,\n    height: htmlHeight,\n    ref,\n    alt,\n    ...rest\n  });\n});\nNativeImage.displayName = \"NativeImage\";\n\n// src/image.tsx\nvar Image2 = forwardRef2(function Image3(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || ignoreFallback || !providedFallback;\n  const status = useImage({\n    ...props,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\n  };\n  if (showFallbackImage) {\n    if (fallback)\n      return fallback;\n    return /* @__PURE__ */ React.createElement(chakra.img, {\n      as: NativeImage,\n      className: \"chakra-image__placeholder\",\n      src: fallbackSrc,\n      ...shared\n    });\n  }\n  return /* @__PURE__ */ React.createElement(chakra.img, {\n    as: NativeImage,\n    src,\n    srcSet,\n    crossOrigin,\n    loading,\n    referrerPolicy,\n    className: \"chakra-image\",\n    ...shared\n  });\n});\nImage2.displayName = \"Image\";\n\n// src/img.tsx\nimport { chakra as chakra2, forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nvar Img = forwardRef3((props, ref) => /* @__PURE__ */ React.createElement(chakra2.img, {\n  ref,\n  as: NativeImage,\n  className: \"chakra-image\",\n  ...props\n}));\nexport {\n  Image2 as Image,\n  Img,\n  shouldShowFallbackImage,\n  useImage\n};\n"],"names":["portfolioRef","useRef","className","as","maxWidth","flexDirection","height","cssSupport","alignItems","justifyContent","gap","backgroundImage","Sea","backgroundClip","fontSize","base","sm","md","letterSpacing","fontWeight","fontFamily","onClick","current","scrollIntoView","backgroundColor","color","_hover","_active","ref","assignRef","value","error","Error","mergeRefs","refs","node","forEach","useMergeRefs","useMemo","cx","classNames","filter","Boolean","join","dataAttr","condition","createContext","strict","name","ButtonGroupProvider","useButtonGroup","ButtonIcon","props","children","rest","_children","isValidElement","cloneElement","focusable","_className","React","chakra","display","alignSelf","flexShrink","ButtonSpinner","label","placement","spacing","Spinner","width","__css","marginProp","spinnerStyles","position","chakra2","displayName","Button","forwardRef","group","styles","useStyleConfig","omitThemingProps","isDisabled","isLoading","isActive","leftIcon","rightIcon","loadingText","iconSpacing","type","spinner","spinnerPlacement","buttonStyles","useMemo2","_focus","zIndex","appearance","userSelect","whiteSpace","verticalAlign","outline","useState","isButton","setIsButton","useCallback","tagName","useButtonType","_ref","defaultType","contentProps","chakra3","disabled","opacity","ButtonContent","marginEnd","marginStart","forwardRef2","size","colorScheme","variant","isAttached","context","useMemo3","groupStyles","borderEndRadius","borderRadius","borderStartRadius","chakra4","role","forwardRef3","icon","isRound","ariaLabel","element","isValidElement2","cloneElement2","padding","NativeImage","htmlWidth","htmlHeight","alt","Image2","fallbackSrc","fallback","src","srcSet","align","fit","loading","ignoreFallback","crossOrigin","fallbackStrategy","referrerPolicy","shouldIgnoreFallbackImage","status","onLoad","onError","sizes","setStatus","useEffect","imageRef","load","flush","img","Image","srcset","onload","event","onerror","useSafeLayoutEffect","useImage","showFallbackImage","shouldShowFallbackImage","shared","objectFit","objectPosition","object","keysToOmit","clone","Object","assign","key","omit"],"sourceRoot":""}